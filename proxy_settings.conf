# Enable proxy settings
function proxy_on(){
   # environment variables are UPPERCASE even in git bash
   export HTTP_PROXY="http://user:pass@ip:port"
   export HTTPS_PROXY=$HTTP_PROXY
   export FTP_PROXY=$HTTP_PROXY
   export SOCKS_PROXY=$HTTP_PROXY

   export http_proxy=$HTTP_PROXY
   export https_proxy=$HTTP_PROXY
   export ftp_proxy=$HTTP_PROXY
   export socks_proxy=$HTTP_PROXY
   export NO_PROXY="localhost,127.0.0.1"

   # Update git and npm to use the proxy
   git config --global http.proxy $HTTP_PROXY
   git config --system http.sslcainfo /bin/curl-ca-bundle.crt
   git config --global http.sslcainfo /bin/curl-ca-bundle.crt
   
   # optional for debugging
   export GIT_CURL_VERBOSE=1

   # optional Self Signed SSL certs and
   # internal CA certificate in an corporate environment
   export GIT_SSL_NO_VERIFY=1

   #env | grep -e _PROXY -e GIT_ | sort
   echo -e "\nProxy-related environment variables set."
}

# Disable proxy settings
function proxy_off(){
   variables=( \
      "HTTP_PROXY" "HTTPS_PROXY" "FTP_PROXY" "SOCKS_PROXY" \
      "NO_PROXY" "GIT_CURL_VERBOSE" "GIT_SSL_NO_VERIFY" "http_proxy" \
      "https_proxy" "ftp_proxy" "socks_proxy" \
   )

   for i in "${variables[@]}"
   do
      unset $i
   done

   # Update git and npm to use the proxy
   git config --global --unset http.proxy
   git config --system --unset http.sslcainfo
   git config --global --unset http.sslcainfo

   env | grep -e _PROXY -e GIT_ | sort
   echo -e "\nProxy-related environment variables removed."
}

# Show proxy settings
function proxy_status(){
   echo "HTTP_PROXY = "$HTTP_PROXY
   echo "HTTPS_PROXY = "$HTTPS_PROXY
   echo "FTP_PROXY = "$FTP_PROXY
   echo "SOCKS_PROXY = "$SOCKS_PROXY
   echo "http_proxy = "$http_proxy
   echo "https_proxy = "$https_proxy
   echo "ftp_proxy = "$ftp_proxy
   echo "socks_proxy = "$socks_proxy
   echo "NO_PROXY = "$NO_PROXY
}

# Enable proxy settings immediately
proxy_on